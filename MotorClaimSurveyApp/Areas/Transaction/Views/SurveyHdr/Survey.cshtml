@using MotorClaimSurveyApp.Areas.Transaction.ViewModels
@model SurveyHeaderViewModel

@inject IHttpContextAccessor HttpContextAccessor
@{
    Layout = "_Layout";
    string userId = HttpContextAccessor.HttpContext.Session.GetString("UserId");
    string userType = HttpContextAccessor.HttpContext.Session.GetString("PtyType");

}

<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.1/jquery.validate.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validation-unobtrusive/3.2.11/jquery.validate.unobtrusive.min.js"></script>


@if (TempData["SuccessMessage"] != null)
{
    <script type="text/javascript">
        window.onload = function () {
            Swal.fire(
               'Success',
                '@TempData["SuccessMessage"]',
                'success'
            ).then(() => {
            $.post('/Transaction/ClaimEdit/ClearSuccessMessage')
                .done(function () {
                    console.log("TempData cleared successfully");
                })
                .fail(function () {
                    console.error("Failed to clear TempData");
                });
        });
        };

    </script>
}
@if (TempData["ErrorMessage"] != null)
{
    <script type="text/javascript">
        window.onload = function () {
            Swal.fire(
               'Failed',
                '@TempData["ErrorMessage"]',
                'failed'
            ).then(() => {
            $.post('/Transaction/ClaimEdit/ClearSuccessMessage')
                .done(function () {
                    console.log("TempData cleared successfully");
                })
                .fail(function () {
                    console.error("Failed to clear TempData");
                });
        };

    </script>
}
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>


@section Scripts {

    <!-- jQuery (required by DataTables) -->
    <!-- DataTables CSS -->
    <link rel="stylesheet" href="https://cdn.datatables.net/1.11.5/css/jquery.dataTables.min.css">

    <!-- DataTables JavaScript -->
    <script src="https://cdn.datatables.net/1.11.5/js/jquery.dataTables.min.js"></script>



    <script>
        // Function to format numbers with commas and ensure two decimal places
        function formatNumberWithCommasAndDecimals(input) {
            var value = input.value.replace(/,/g, ''); // Remove existing commas
            var number = parseFloat(value);

            if (!isNaN(number)) {
                // Format the number with commas and two decimal places
                input.value = number.toLocaleString(undefined, { minimumFractionDigits: 2, maximumFractionDigits: 2 });
            } else {
                input.value = ''; // Clear the value if it's not a valid number
            }
        }

        // Format all input fields after the page loads
        window.addEventListener('load', function() {
            var fields = [
                'txtFCAmount',
                'txtLCAmount'
            ];

            fields.forEach(function(fieldId) {
                var field = document.getElementById(fieldId);
                if (field) {
                    formatNumberWithCommasAndDecimals(field);
                }
            });
        });
    </script>


    <style>
        .btn-primary {
            background-color: navy;
        }
    </style>
    <script>



        $(document).ready(function () {

        if ($('#txtSurveyNumber').val().trim() !== '') {
        $('#btnSubmitSurvey').hide();
        $('#btnSave').hide();
        $('#btnReset').hide();
        $('#btnAddDetails').hide();
        $('#txtSurveyNumber').closest('.row').show();
        $('input, select, textarea').prop('disabled', true);

        } else {
        $('#txtSurveyNumber').closest('.row').hide();
        }

        // Button to add details

        $("#btnAddDetails").on("click", function () {
        var currencyCode = $("#SurCurr").val();
        var surUid = $("#surUid").val();

        console.log(currencyCode);

        if (currencyCode) {
        window.location.href = '/Transaction/SurveyDtl/AddDetails?currencyCode=' + encodeURIComponent(currencyCode) + '&surUid=' + encodeURIComponent(surUid);
        } else {
        alert("Please select a valid currency code.");
        }
        });


        //Submit Survey

            $('#btnSubmitSurvey').on('click', function () {
            var surUid = $('#surUid').val();
            var userID = '@userId';
            var userType = '@userType';

             console.log('Survey UID:', surUid);
            console.log('User ID:', userID);
            console.log('User type:', userType);


                if (userType !== "S") {
            Swal.fire({
                icon: 'error',
                title: 'Unauthorized',
                text: 'You are not authorized to submit this survey.'
            });
            return; // Exit the function if userID is not "S"
        }

           
            // Get the error message (e.g., errorCode 3001) from the controller
            $.ajax({
                url: '/Master/ErrorCodeMaster/GetsubmitSurveyConfirmationMessage',
                type: 'GET',

                success: function (response) {
                    if (response.success) {
                        // Show the confirmation SweetAlert with the fetched message
                        Swal.fire({
                            title: 'Warning',
                            text: response.message,  // Use the message fetched from ErrorCodeMaster
                            icon: 'warning',
                            showCancelButton: true,
                            confirmButtonColor: '#3085d6',
                            cancelButtonColor: '#d33',
                            confirmButtonText: 'Yes, submit it!',
                            cancelButtonText: 'Cancel'
                        }).then((result) => {
                            if (result.isConfirmed) {
                                // Proceed with the AJAX request if confirmed
                                $.ajax({
                                    url: '@Url.Action("SubmitSurvey", "SurveyHdr")',
                                    type: 'POST',
                                    data: { surUid: surUid, userID: userID },
                                    success: function (response) {
                                        if (response.success) {
                                            // Show the SweetAlert with the server response message
                                            Swal.fire({
                                                icon: 'success',
                                                title: 'Success!',
                                                text: response.message // Use the message from the server
                                            }).then(() => {
                                                // Redirect to the SurveyEdit page after the user closes the alert
                                                window.location.href = '/Transaction/SurveyHdr/SurveyEdit?surUid=' + surUid;
                                            });
                                            // Perform additional actions, e.g., disable fields or hide buttons
                                            $("#surveyForm :input").prop("disabled", false);
                                            $('input, textarea, select').prop('disabled', true);
                                            $('#btnSurvey').hide();
                                            $('#ddlSurLocation').prop('disabled', true);
                                            $('#SurCurr').prop('disabled', false);
                                        } else {
                                            alert(response.message); // Show error message
                                        }
                                    },
                                    error: function (xhr, status, error) {
                                        alert('An error occurred: ' + error);
                                    }
                                });
                            } else {
                                // User clicked cancel, do nothing
                                console.log('Survey submission was cancelled.');
                            }
                        });
                    } else {
                        alert('Failed to fetch error message');
                    }
                },
                error: function () {
                    alert('Error fetching the error message');
                }
            });
        });



        var fcAmount = $('#txtFCAmount').val();
        if (fcAmount)
        {

        $('#ddlSurLocation').prop('disabled', true); // Disable the dropdown
        $('#SurCurr').prop('disabled', true);
           $('#btnSave').hide();
           $('#btnReset').hide();
        } else {
        $('#btnSubmitSurvey').hide();

        }


        });
        // function redirectToAppropriatePage() {

        // var surveyNumber = document.getElementById('txtSurveyNumber').value;
        // if (surveyNumber) {
        // window.history.back();
        // } else {
        // window.location.href = '/Transaction/SurveyHdr/SurveyListing';
        // }
        // }

                function redirectToAppropriatePage() {
            // Get the current URL
            var currentUrl = window.location.href;
            console.log(currentUrl)
            // Get the survey number value
            var surveyNumber = document.getElementById('txtSurveyNumber').value;

            // Check if the URL contains "SurveyEdit2"
            if (surveyNumber && currentUrl.includes('SurveyEdit2')) {
                // Go back to the previous page in history
                window.history.back();
            } else {
                // Redirect to the Survey Listing page
                window.location.href = '/Transaction/SurveyHdr/SurveyListing';
            }
        }

    </script>


}



<div class="heads">
    <div class="d-flex justify-content-between align-items-start">
        @*         <button class="btn btn-primary back" type="button" onclick="window.location.href='/Transaction/SurveyHdr/SurveyListing';">Back</button>
 *@    </div>

    <button class="btn btn-primary back" type="button" onclick="redirectToAppropriatePage();">Back</button>
    <h2>@ViewData["Title"]</h2>
</div>
<div class="container bg-light p-4 shadow rounded">
    <h4 class="text-center mb-4" style="color:navy">SURVEY FORM</h4>

    <form id="surveyForm" action="@Url.Action("SurveyEdit", "SurveyHdr", new { surUid = Model.MotorClmSurHdrEntity.SurUid })" method="post">
        @Html.AntiForgeryToken()
        <div class="row mb-3">
            <div class="text-center my-3">
                <input id="txtSurveyNumber"
                       name="SurveyNumber"
                       class="form-control font-weight-bold text-center"
                       style="color: red; width: 50%; margin: 0 auto;"
                       value="@Model.MotorClmSurHdrEntity.SurNo"
                       readonly />
            </div>
        </div>
        <div class="row mb-3">
            <input type="hidden" name="MotorClmSurHdrEntity.SurUid" id="surUid" value="@Model.MotorClmSurHdrEntity.SurUid" />
            @*  <input type="hidden" name="MotorClmSurHdrEntity.SurClmUid" id="surClmUid" value="@Model.MotorClmSurHdrEntity.SurClmUid" />
 *@

            <!-- Survey No -->
            <div class="col-md-4">
                <label for="SurClmNo" class="control-label">Claim No</label>
                <input type="text"
                       id="SurClmNo"
                       name="MotorClmSurHdrEntity.SurClmNo"
                       class="form-control"
                       value="@(Model.MotorClmSurHdrEntity.SurClmNo)"
                       readonly />
                <span class="text-danger">@Html.ValidationMessageFor(model => model.MotorClmSurHdrEntity.SurClmNo)</span>
            </div>

            <!-- Survey Date -->
            <div class="col-md-4">
                <label for="SurDate" class="control-label">Survey Date</label>
                <input type="text"
                       id="SurDate"
                       name="MotorClmSurHdrEntity.SurDate"
                       class="form-control"
                       placeholder="Enter survey Date"
                       value="@(Model.MotorClmSurHdrEntity.SurDate.ToString("dd-MM-yyyy"))"
                       readonly />
                <span class="text-danger">@Html.ValidationMessageFor(model => model.MotorClmSurHdrEntity.SurDate)</span>
            </div>

            <!-- Survey Location -->
            <div class="col-md-4">
                <label asp-for="MotorClmSurHdrEntity.SurLocation" class="form-label">Survey Location<span class="text-danger">*</span></label>
                @Html.DropDownListFor(
                         m => m.MotorClmSurHdrEntity.SurLocation,
                         new SelectList(Model.ListLocation, "Value", "Text"),

                         new { @class = "form-control", @required = "required", id = "ddlSurLocation" }
                         )
                <span class="text-danger">@Html.ValidationMessageFor(model => model.MotorClmSurHdrEntity.SurLocation)</span>
            </div>
        </div>
        <div class="row mb-3">
            <!-- Chassis Number -->
            <div class="col-md-4">
                <label asp-for="MotorClmSurHdrEntity.SurChassisNo" class="form-label">Chassis Number</label>
                <input type="text" id="txtChassissNo" name="MotorClmSurHdrEntity.SurChassisNo" class="form-control" value="@Model.MotorClmSurHdrEntity.SurChassisNo" readonly />
                <span asp-validation-for="MotorClmSurHdrEntity.SurChassisNo" class="text-danger"></span>
            </div>


            <!-- Engine Number -->
            <div class="col-md-4">
                <label asp-for="MotorClmSurHdrEntity.SurEngineNo" class="form-label">Engine Number</label>
                <input type="text" id="txtEngNo" name="MotorClmSurHdrEntity.SurEngineNo" class="form-control" value="@Model.MotorClmSurHdrEntity.SurEngineNo" readonly />
                <span asp-validation-for="MotorClmSurHdrEntity.SurEngineNo" class="text-danger"></span>
            </div>

            <!-- Registration Number -->
            <div class="col-md-4">
                <label asp-for="MotorClmSurHdrEntity.SurRegnNo" class="form-label">Registration Number</label>
                <input type="text" id="txtRegNo" name="MotorClmSurHdrEntity.SurRegnNo" class="form-control" value="@Model.MotorClmSurHdrEntity.SurRegnNo" readonly />
                <span asp-validation-for="MotorClmSurHdrEntity.SurRegnNo" class="text-danger"></span>
            </div>
        </div>

        <div class="row mb-3">
            <!-- Currency Code -->
            <div class="col-md-4">
                <label asp-for="SurCurr" class="form-label">Currency Code <span class="text-danger">*</span></label>
                @Html.DropDownListFor(m => m.MotorClmSurHdrEntity.SurCurr, new SelectList(Model.ListCurrCode, "Value", "Text"), (object)new { @class = "form-control", @required = "required", id = "SurCurr" })
                <span class="text-danger">@Html.ValidationMessageFor(model => model.MotorClmSurHdrEntity.SurCurr)</span>
            </div>


            <!-- LC Amount -->
            <div class="col-md-4">
                <label asp-for="MotorClmSurHdrEntity.SurLcAmt" class="form-label">LC Amount</label>
                <input type="text" id="txtLCAmount" name="MotorClmSurHdrEntity.v" class="form-control" value="@Model.MotorClmSurHdrEntity.SurLcAmt" readonly style="text-align: right; " />
                <span asp-validation-for="MotorClmSurHdrEntity.SurLcAmt" class="text-danger"></span>
            </div>

            <!-- FC Amount -->
            <div class="col-md-4">
                <label asp-for="MotorClmSurHdrEntity.SurFcAmt" class="form-label">FC Amount</label>
                <input type="text" id="txtFCAmount" name="MotorClmSurHdrEntity.SurFcAmt" class="form-control" value="@Model.MotorClmSurHdrEntity.SurFcAmt" readonly style="text-align: right;" />
                <span asp-validation-for="MotorClmSurHdrEntity.SurFcAmt" class="text-danger"></span>
            </div>
        </div>
        @Html.HiddenFor(m => m.Mode)
        <!-- Submit and Update Buttons -->
        <div class="row justify-content-center">
            <div class="col-md-4 d-flex justify-content-center">

                <button type="submit" id="btnSave" class="btn btn-primary mx-2">Save</button>

                @if (Model.MotorClmSurHdrEntity.SurLocation != "" && Model.MotorClmSurHdrEntity.SurCurr != "")
                {
                    <button type="button" id="btnAddDetails" class="btn btn-primary mx-2">Add Details</button>
                }
                <button type="button" id="btnReset" class="btn btn-secondary btn-block" onclick="location.href='@Url.Action("SurveyEdit", "SurveyHdr", new { surUid = Model.MotorClmSurHdrEntity.SurUid })'"><i class="fas fa-undo mr-1"></i>Reset</button>

            </div>
        </div>

    </form>
</div>






<html>
<head>
    <style>
        #gdCodes {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            border-collapse: collapse;
            width: 100%;
            border: 1px solid #e0e0e0;
            box-shadow: 0 4px 6px rgba(0, 0, 0, 0.3);
            border-radius: 8px;
            overflow: hidden;
        }

            #gdCodes th, #gdCodes td {
                border: 1px solid #ddd;
                padding: 5px;
                text-align:left;
                white-space: nowrap; /* Ensures content fits without wrapping */
                font-size: 14px;
            }

            #gdCodes th {
                /* background-color: lightblue; */

                background-color: #a8d8ea;
                color: #003366;
                border: 1px solid #b0c4de;
                padding: 10px;
            }

            #gdCodes td {
                background-color: #f4f8fb;
                color: #00264d;
                border: 1px solid #b0c4de;
                padding: 10px;
            }

                #gdCodes th:nth-child(4) {
                    text-align: center;
                }

                #gdCodes td:nth-child(4) {
                    text-align: right;
                }

            #gdCodes th:nth-child(3) {
                text-align: center;
            }

            #gdCodes td:nth-child(3) {
                text-align: right;
            }

            #gdCodes th:nth-child(5) {
                text-align: center;
            }

            #gdCodes td:nth-child(5) {
                text-align: right;
            }

            #gdCodes th:nth-child(6) {
                text-align: center;
            }

            #gdCodes td:nth-child(6) {
                text-align: right;
            }


            #gdCodes tr:hover {
                background-color: lightgrey;
            }

        body {
            background-color: white !important;
            justify-content: center;
        }

        .table-container {
            width: 100%;
            overflow-x: auto; /* Allow horizontal scrolling if necessary */
        }

        .text-right {
            text-align: right !important; /* Ensure that the text is aligned to the right */
        }
    </style>
</head>


<body>
    <br />
   
    <div class="container">
        <form asp-controller="ClaimListing" asp-action="ClaimEdit" style="display: flex; justify-content: space-between; align-items: center;">


            <h5 style="color: navy;">SURVEY DETAILS LISTING</h5>


            @* <button type="submit" class="btn btn-success">Add</button> *@
        </form>
        <br />
        <div class="table-container" id="VoucherTable">
            <table id="gdCodes" width="100%" cellspacing="0">
                <thead>
                    <tr>
                        <th>SURD_UID</th>
                        <th>SURD_SUR_UID</th>
                        <th>ITEM </th>
                        <th>TYPE</th>
                        <th>UNIT PRICE</th>
                        <th>QUANTITY</th>
                        <th>LC AMT</th>
                        <th>FC AMT</th>
                        <th>ACTIONS</th>

                    </tr>

                </thead>
            </table>
        </div>
    </div>



    <div class="d-flex justify-content-center">
        <button type="button" id="btnSubmitSurvey" class="btn btn-primary">
            Submit
        </button>
    </div>





    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <script>
             document.getElementById("ddlSurLocation").oninvalid = function (event) {
            event.target.setCustomValidity("Please select a Survey Location.");
        };

        document.getElementById("ddlSurLocation").oninput = function (event) {
            event.target.setCustomValidity(""); // Clear the custom message on valid input
        };


            $(document).ready(function () {

        var id=@Model.MotorClmSurHdrEntity.SurUid;
            var surStatus = "@Model.MotorClmSurHdrEntity.SurStatus"; // Get the SurStatus from the model
            console.log(surStatus);
                $("#gdCodes").DataTable(
                    {

                        ajax: {

                            url: "/Transaction/SurveyHdr/SurveyDetailsListBinding",
                            data: { code: id },
                            type: "POST",
                            datatype: "json",
                        },

                        processing: true,
                        serverSide: true,
                        filter: true,
                        ordering: false,
                        columnDefs: [{
                            targets: [0],
                            visible: true,
                            searchable: true
                        },
                        {
                            targets: [8],
                            visible: surStatus !== "S",

                        }


                        ],

                        columns: [
                                { "data": "SURD_UID", "name": "SURD_UID", "visible": false },
                                { "data": "SURD_SUR_UID", "name": "SURD_SUR_UID", "visible": false },
                                { "data": "SURD_ITEM_CODE", "name": "SURD_ITEM_CODE" },
                                { "data": "SURD_TYPE", "name": "SURD_TYPE" },
                                {
                                    "data": "SURD_UNIT_PRICE",
                                    "name": "SURD_UNIT_PRICE",
                                   
                                    "render": function(data, type, row) {
                                        return data ? parseFloat(data).toFixed(2).replace(/\B(?=(\d{3})+(?!\d))/g, ",") : data;
                                    }
                                },
                                { "data": "SURD_QUANTITY", "name": "SURD_QUANTITY" },
                                {
                                    "data": "SURD_LC_AMT",
                                    "name": "SURD_LC_AMT",
                                  
                                    "render": function(data, type, row) {
                                        return data ? parseFloat(data).toFixed(2).replace(/\B(?=(\d{3})+(?!\d))/g, ",") : data;
                                    }
                                },
                                {
                                    "data": "SURD_FC_AMT",
                                    "name": "SURD_FC_AMT",
                                  
                                    "render": function(data, type, row) {
                                        return data ? parseFloat(data).toFixed(2).replace(/\B(?=(\d{3})+(?!\d))/g, ",") : data;
                                    }
                                },

                            {
                                data: null,
                                render: function (data, type, row) {
                                    if (surStatus == "S") {
                                        return "";
                                    }
                                    var id = row.SURD_UID;
                                    var id2 = row.SURD_SUR_UID;
                                    var currencyCode = $("#SurCurr").val();

                                    var currencyCode = $("#SurCurr").val();

                                   var deleteButton = '<a href="#" onclick="return DeleteCode(\'' + id + '\', \'' + id2 + '\')" class="btn-img" id="bttndelete" style="display: inline-flex; justify-content: center; align-items: center; text-align: center; width: auto; height: auto; text-decoration: none;">' +
    '<i class="fa fa-trash" style="font-size: 18px; color: red;"></i>' +
    '</a>';

        var editButton = '<div style="text-align: center;"><a href="#" onclick="return EditCodes(\'' + id + '\', \'' + id2 + '\', \'' + currencyCode + '\')" class="btn-img" style="display: inline-flex; justify-content: center; align-items: center; text-align: center; width: auto; height: auto; text-decoration: none;">' +
    '<i class="fa fa-edit" style="font-size: 18px; color: navy;"></i>' +
    '</a>';

                            return editButton + ' ' + deleteButton ;                                }

                            }


                        ]
                    }

                );
            });

            function EditCodes(id, id2,currencyCode) {
            window.location.href = '/Transaction/SurveyDtl/AddDetails?surdUid=' + id + '&surUid=' + id2 + '&currencyCode=' +currencyCode;
            return false;
        }


             function DeleteCode(id, id2) {
            // Fetch the confirmation message dynamically
            $.ajax({
                url: '/Master/ErrorCodeMaster/GetDeleteConfirmationMessage', // Endpoint to fetch the message
                type: 'GET',
                success: function (response) {
                    if (response.success) {
                        Swal.fire({
                            title: 'Warning',
                            text: response.message, // Use the dynamic confirmation message
                            icon: 'warning',
                            showCancelButton: true,
                            confirmButtonText: 'Yes, delete it!',
                            cancelButtonText: 'No, cancel!',
                            confirmButtonColor: '#3085d6',
                            cancelButtonColor: '#d33'
                        }).then((result) => {
                            if (result.isConfirmed) {
                                // Perform the delete action
                                $.ajax({
                                    url: '/Transaction/SurveyDtl/DeleteItem',
                                    type: 'POST',
                                    data: { code: id, code2: id2 },
                                    success: function (response) {
                                        if (response.success) {
                                            // Reload the grid and navigate after successful deletion
                                            $('#gdCodes').DataTable().ajax.reload();
                                            window.location.href = '/Transaction/SurveyHdr/SurveyEdit?surUid=' + id2;

                                            Swal.fire('Success!', response.message, 'success');
                                        } else {
                                            Swal.fire({
                                                icon: 'error',
                                                title: 'Error!',
                                                text: response.message || 'Failed to delete the record.',
                                            });
                                        }
                                    },
                                    error: function () {
                                        Swal.fire({
                                            icon: 'error',
                                            title: 'Error!',
                                            text: 'An unexpected error occurred.',
                                        });
                                    }
                                });
                            }
                        });
                    } else {
                        // Handle case where dynamic message could not be fetched
                        Swal.fire({
                            icon: 'error',
                            title: 'Error!',
                            text: response.message || 'Unable to fetch the confirmation message.',
                        });
                    }
                },
                error: function () {
                    Swal.fire({
                        icon: 'error',
                        title: 'Error!',
                        text: 'Failed to fetch the confirmation message from the server.',
                    });
                }
            });
            return false;
        }

            function redirectToURL() {
                // Get the form action URL

                /*  var formAction = document.getElementById("redirectForm").getAttribute("asp-action");*/

                // Perform the redirection
                window.location.href = '';
            }


    </script>


    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css" rel="stylesheet">


</body>
</html>

